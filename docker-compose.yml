version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: trucomm-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: trucomm
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trucomm"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trucomm-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres@db:5432/trucomm?schema=public
      FRONTEND_URL: http://localhost:3000
      JWT_SECRET: changeme
      JWT_REFRESH_SECRET: changeme_refresh
      SMTP_HOST: smtp.example.com
      SMTP_PORT: 587
      SMTP_USER: user@example.com
      SMTP_PASS: secret
      STRIPE_SECRET_KEY: sk_test_change
      STRIPE_PUBLISHABLE_KEY: pk_test_change
    ports:
      - "5000:5000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: trucomm-frontend
    environment:
      NODE_ENV: production
      # If the frontend calls the backend at /api, you may want NEXT_PUBLIC_API_BASE
      NEXT_PUBLIC_API_BASE: http://localhost:5000
    depends_on:
      - backend
    ports:
      - "3000:3000"

volumes:
  db-data:


